#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path('../../lib', __FILE__))
require 'biotcm'
require 'json'

# Get the list of all apps
apps_file = BioTCM.path_to('data/apps.json', secure: true)
apps = JSON.parse(
  begin
    # Try to use the latest
    json = BioTCM.get(BioTCM::DEFAULT_APPS_FILE)
    File.open(apps_file, 'w').write json
    json
  rescue
    # Or use the one downloaded previously
    raise 'Please connect to Internet to get the latest list of apps' unless File.exist?(apps_file)
    File.read(apps_file)
  end
)
apps.reject! { |k, _| /^__/ =~ k }

# Get lists of apps
available_gems = `gem list biotcm- --no-versions`.split("\n")
gem_apps = apps.keys.select { |k| available_gems.include? apps[k]['gem-name'] }
built_in_apps = apps.keys.select { |k| apps[k]['gem-name'] == '(built-in)' }

if (cmd = ARGV.shift).nil? || cmd == '-h'
  # Help message
  puts <<-END_OF_DOC
Usage: biotcm app [OPTIONS]

Available apps:
  END_OF_DOC
  (built_in_apps + gem_apps).sort.each { |app| puts '  ' + app }
elsif cmd == '-v'
  date = 'unknown'
  File.open(File.expand_path('../../HISTORY.md', __FILE__)).each do |line|
    next unless line =~ /^\#\#\#/
    next unless (col = line.split(/\s/))[1] == "v#{BioTCM::VERSION}"
    date = col[2]
    break
  end
  puts "biotcm #{BioTCM::VERSION} (#{date})"
elsif built_in_apps.include?(cmd)
  BioTCM::Apps.const_get(apps[cmd]['class-name']).new.run
elsif gem_apps.include?(cmd)
  require apps[cmd]['gem-name']
  BioTCM::Apps.const_get(apps[cmd]['class-name']).new.run
else
  # Error message
  puts "Sorry. BioTCM can't find app \"#{cmd}\"."
end
